/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-11-17 09:56:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import semi_SHINee.SHINeeUserDAO;

public final class SHINeeRegister_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("semi_SHINee.SHINeeUserDAO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("    <head>\n");
      out.write("        <meta charset=\"UTF-8\">\n");
      out.write("        <title>SHINee Music회원가입 페이지</title>\n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/광원님.css\">\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("        <div class=\"pageColor\">\n");
      out.write("            <div class=\"TabColor\"><img src=\"images/mypage.png\" class=\"TabiconImage\"><strong class=\"TabTextStyle\">회원 가입</strong> \n");
      out.write("                <button id=\"pageCloseButton\" type=\"button\" class=\"pageCloseButton\" onclick=\"closeButton()\"><Strong class=\"pageCloseButtonText\">X</Strong></button>\n");
      out.write("            </div>     \n");
      out.write("            <div id=\"createAccount\">\n");
      out.write("                <form action=\"SHINeeRegister.jsp\">\n");
      out.write("	                <label for=\"id\">\n");
      out.write("	                        <img class=\"iconImg\" src=\"images/user.png\">\n");
      out.write("	                </label>\n");
      out.write("	                    <input id=\"id\" name=\"idcheck\" type=\"text\" placeholder=\"아이디\" autocomplete=\"off\">\n");
      out.write("	                    									<!--  oninput = 입력할때마다 실시간 체크   autocomplete=\"off\" 자동완성 기능 off -->\n");
      out.write("	                    <button id=\"idButton\" type=\"submit\" name=\"idButton\" >아이디 중복 확인</button> <!--  onclick=\"idDbCheck()\" --> \n");
      out.write("	                    <span id=\"ruleid\"></span> <!--  <input type=\"hidden\" name=\"idCheckBox\" id=\"idCheckBox\" value=\"idUnCheck\">  -->\n");
      out.write("	              	</form>\n");
      out.write("	                	");
	     
                    		String user_id = request.getParameter("idcheck");
	                		SHINeeUserDAO userDAO = new SHINeeUserDAO();
                    		boolean bb = userDAO.getUserIdCheck(user_id);    
                    		
                    		if(bb==true){
	                	
      out.write("\n");
      out.write("	                		<script>\n");
      out.write("	                				alert(\"이미 존재하는 id입니다\");\n");
      out.write("	                		</script>\n");
      out.write("	                	");
	
                    		}
	                	
      out.write("   \n");
      out.write("                <form action=\"SHINeeRegisterServlet\" method=\"post\" enctype=\"multipart/form-data\">\n");
      out.write("	                <input type=\"hidden\" name=\"id\" value=\"");
      out.print(user_id);
      out.write("\">\n");
      out.write("	                <div>\n");
      out.write("	                    <label for=\"name\">\n");
      out.write("	                        <img class=\"iconImg\" src=\"images/name.png\">\n");
      out.write("	                    </label>\n");
      out.write("	                    <input id=\"name\" name=\"name\" type=\"text\" oninput=\"nameCheck()\" placeholder=\"이름\" autocomplete=\"off\">\n");
      out.write("	                    <p id=\"rulename\"></p>\n");
      out.write("	                </div>\n");
      out.write("	                <div>\n");
      out.write("	                    <label for=\"pw\">\n");
      out.write("	                        <img class=\"iconImg\" src=\"images/password.png\">\n");
      out.write("	                    </label>\n");
      out.write("	                    <input id=\"pw\" name=\"pw\" type=\"password\" oninput=\"pwCheck()\"  placeholder=\"비밀번호\" autocomplete=\"off\">\n");
      out.write("	                    <p id=\"rulepm\"></p>\n");
      out.write("	                </div>\n");
      out.write("	                <div>\n");
      out.write("	                    <label for=\"checkpw\">\n");
      out.write("	                       <img class=\"iconImg\" src=\"images/passwordcheck.png\">\n");
      out.write("	                    </label>\n");
      out.write("	                    <input id=\"checkpw\" type=\"password\" oninput=\"pwCheck()\" placeholder=\"비밀번호 확인\">\n");
      out.write("	                    <span id=\"checkpm\"></span>\n");
      out.write("	                </div>\n");
      out.write("	                <br>\n");
      out.write("	                <div>\n");
      out.write("	                    <label for=\"nickname\">\n");
      out.write("	                        <img class=\"iconImg\" src=\"images/profile.png\">\n");
      out.write("	                    </label>\n");
      out.write("	                    <input id=\"nickname\" name=\"nickname\" type=\"text\" oninput=\"nicknameCheck()\" placeholder=\"닉네임\" autocomplete=\"off\">\n");
      out.write("	                    <p id=\"rulenickname\"></p>\n");
      out.write("	                </div>\n");
      out.write("	                \n");
      out.write("	                <div>\n");
      out.write("	                    <div id=\"profileContainer\">\n");
      out.write("	                        <!-- 프로필 사진을 표시할 컨테이너 -->\n");
      out.write("	                        <img id=\"uploadProfile\">\n");
      out.write("	                    </div>\n");
      out.write("	                    <input type=\"file\" id=\"profileInput\" name=\"profileInput\" accept=\"image/*\" style=\"margin: 0 0 0 6%;\">\n");
      out.write("	                    <button id=\"profileUploadButton\" type=\"button\">프로필 등록</button>\n");
      out.write("	                </div>\n");
      out.write("	                <br>\n");
      out.write("	                <div>\n");
      out.write("	                    <label for=\"emailid\">\n");
      out.write("	                        <img class=\"iconImg\" src=\"images/email.png\">\n");
      out.write("	                    </label>\n");
      out.write("	                    <input id=\"emailid\" type=\"email\" name=\"emailid\"  oninput=\"userEmailCheck()\" placeholder=\"hongildong@naver.com\" autocomplete=\"off\">\n");
      out.write("	                    <p id=\"ruleemail\"></p>\n");
      out.write("	                </div>\n");
      out.write("	                <div>\n");
      out.write("	                    <label for=\"phoneNumber\">\n");
      out.write("	                        <img class=\"iconImg\" src=\"images/phone.png\">\n");
      out.write("	                    </label>\n");
      out.write("	                    <input id=\"phoneNumber\" name=\"phoneNumber\" type=\"text\" oninput=\"userPhoneCheck()\" placeholder=\"01012345678\" autocomplete=\"off\">\n");
      out.write("	                    <p id=\"rulephoneNumber\"></p>\n");
      out.write("	                </div>\n");
      out.write("	                <button id=\"createUserButton\" onclick=\"CreateUser()\">회원가입</button>\n");
      out.write("	                \n");
      out.write("            	</form>\n");
      out.write("            	</div>\n");
      out.write("			    \n");
      out.write("       	</div>\n");
      out.write("       	<script src=\"https://code.jquery.com/jquery-3.7.1.js\" \n");
      out.write("        integrity=\"sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=\" \n");
      out.write("        crossorigin=\"anonymous\"></script>\n");
      out.write("       	<script src=\"js/CreateAccountPage.js\">\n");
      out.write("        </script>\n");
      out.write("        <script>\n");
      out.write("        \n");
      out.write("        // <>%% 이 꺽쌔 문구는 jsp 전용이라 jsp 파일 내에서만 된다 ^^\n");
      out.write("        \n");
      out.write("       \n");
      out.write("       \n");
      out.write("        </script>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
